name: CI/CD for ECS Updates

on:
  push:
    branches:
      - master 


env:
  AWS_REGION: "eu-north-1"
  ECR_URI_REDIS: "654654200977.dkr.ecr.eu-north-1.amazonaws.com/petp_redis_repo_default:latest"
  ECR_URI_BACKEND: "654654200977.dkr.ecr.eu-north-1.amazonaws.com/petp_rds_repo_default:latest"
  TF_VERSION: "1.9.7"
    
jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials  # Added this step
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to ECR for Redis Image
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_URI_REDIS }}

      - name: Build, Tag, and Push Redis Image
        run: |
          cd backend_redis
          docker build -t my-redis-image .
          docker tag my-redis-image:latest ${{ env.ECR_URI_REDIS }}
          docker push ${{ env.ECR_URI_REDIS }}

      - name: Log in to ECR for Backend Image
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_URI_BACKEND }}

      - name: Build, Tag, and Push Backend Image
        run: |
          cd backend_rds
          docker build -t my-backend-image .
          docker tag my-backend-image:latest ${{ env.ECR_URI_BACKEND }}
          docker push ${{ env.ECR_URI_BACKEND }}


  update-ecs:
    name: Update ECS Task Definitions
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Update Redis Task
        run: |
          aws ecs update-service \
          --cluster ${{ env.CLUSTER_NAME }} \
          --service redis \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}

      - name: Update RDS Task
        run: |
          aws ecs update-service \
          --cluster ${{ secrets.CLUSTER_NAME }} \
          --service rds \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}



